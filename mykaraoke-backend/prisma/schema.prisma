// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int    @id @default(autoincrement())
  email          String @unique
  hashedPassword String
}

model Resume {
  id            Int             @id @default(autoincrement())
  name          String?
  email         String?
  phone         String?
  location      String?
  githubLink    String?
  portfolioLink String?
  summary       String?
  skills        Keyword[]
  experiences   Experience[]
  projects      Project[]
  education     Education[]
  certification Certification[]
  JobListing    JobListing?     @relation(fields: [jobListingId], references: [id])
  jobListingId  Int?
  createdAt     DateTime        @default(now())
}

model Experience {
  id          Int        @id @default(autoincrement())
  companyName String?
  location    String?
  title       String?
  date        DateRange? @relation(fields: [dateRangeId], references: [id])
  summary     String?
  Resume      Resume?    @relation(fields: [resumeId], references: [id])
  resumeId    Int?
  dateRangeId Int?
}

model Project {
  id       Int     @id @default(autoincrement())
  name     String
  link     String?
  summary  String?
  Resume   Resume? @relation(fields: [resumeId], references: [id])
  resumeId Int?
}

model DateRange {
  id            Int             @id @default(autoincrement())
  from          DateTime
  to            DateTime
  Certification Certification[]
  Experience    Experience[]
  Education     Education[]
}

model Education {
  id             Int        @id @default(autoincrement())
  schoolName     String
  schoolLocation String?
  date           DateRange? @relation(fields: [dateRangeId], references: [id])
  coursework     String?
  gpa            String?
  degree         String?
  awards         String?
  sports         String?
  Resume         Resume?    @relation(fields: [resumeId], references: [id])
  resumeId       Int?
  dateRangeId    Int?
}

model Certification {
  id           Int       @id @default(autoincrement())
  name         String
  organization String
  date         DateRange @relation(fields: [dateRangeId], references: [id])
  Resume       Resume?   @relation(fields: [resumeId], references: [id])
  resumeId     Int?
  dateRangeId  Int
}

model JobListing {
  id             Int       @id @default(autoincrement())
  title          String
  company        String
  description    String
  specialization String?
  level          String?
  postingDate    DateTime?
  crawlDate      DateTime?
  location       String?
  salary         String?
  listingLink    String?
  applyLink      String?
  source         String?
  sourceId       String?
  keywords       Keyword[]
  resumes        Resume[]

  @@unique([source, sourceId])
}

model Keyword {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  jobListings JobListing[]
  categories  Category[]
  resumes     Resume[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  keywords Keyword[]
}
